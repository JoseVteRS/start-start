/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './app/__root'
import { Route as ContactImport } from './app/contact'
import { Route as AuthImport } from './app/auth'
import { Route as AppImport } from './app/_app'
import { Route as RouteImport } from './app/route'
import { Route as PostsIndexImport } from './app/posts/index'
import { Route as AboutIndexImport } from './app/about/index'
import { Route as AuthSignInImport } from './app/auth/sign-in'
import { Route as PostsPostIdRouteImport } from './app/posts/$postId/route'

// Create/Update Routes

const ContactRoute = ContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const RouteRoute = RouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PostsIndexRoute = PostsIndexImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => rootRoute,
} as any)

const AboutIndexRoute = AboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRoute,
} as any)

const PostsPostIdRouteRoute = PostsPostIdRouteImport.update({
  id: '/posts/$postId',
  path: '/posts/$postId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof RouteImport
      parentRoute: typeof rootRoute
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/posts/$postId': {
      id: '/posts/$postId'
      path: '/posts/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof PostsPostIdRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof AuthImport
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexImport
      parentRoute: typeof rootRoute
    }
    '/posts/': {
      id: '/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthSignInRoute: typeof AuthSignInRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSignInRoute: AuthSignInRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof RouteRoute
  '': typeof AppRoute
  '/auth': typeof AuthRouteWithChildren
  '/contact': typeof ContactRoute
  '/posts/$postId': typeof PostsPostIdRouteRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/about': typeof AboutIndexRoute
  '/posts': typeof PostsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof RouteRoute
  '': typeof AppRoute
  '/auth': typeof AuthRouteWithChildren
  '/contact': typeof ContactRoute
  '/posts/$postId': typeof PostsPostIdRouteRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/about': typeof AboutIndexRoute
  '/posts': typeof PostsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof RouteRoute
  '/_app': typeof AppRoute
  '/auth': typeof AuthRouteWithChildren
  '/contact': typeof ContactRoute
  '/posts/$postId': typeof PostsPostIdRouteRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/about/': typeof AboutIndexRoute
  '/posts/': typeof PostsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/auth'
    | '/contact'
    | '/posts/$postId'
    | '/auth/sign-in'
    | '/about'
    | '/posts'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/auth'
    | '/contact'
    | '/posts/$postId'
    | '/auth/sign-in'
    | '/about'
    | '/posts'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/auth'
    | '/contact'
    | '/posts/$postId'
    | '/auth/sign-in'
    | '/about/'
    | '/posts/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  RouteRoute: typeof RouteRoute
  AppRoute: typeof AppRoute
  AuthRoute: typeof AuthRouteWithChildren
  ContactRoute: typeof ContactRoute
  PostsPostIdRouteRoute: typeof PostsPostIdRouteRoute
  AboutIndexRoute: typeof AboutIndexRoute
  PostsIndexRoute: typeof PostsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  RouteRoute: RouteRoute,
  AppRoute: AppRoute,
  AuthRoute: AuthRouteWithChildren,
  ContactRoute: ContactRoute,
  PostsPostIdRouteRoute: PostsPostIdRouteRoute,
  AboutIndexRoute: AboutIndexRoute,
  PostsIndexRoute: PostsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_app",
        "/auth",
        "/contact",
        "/posts/$postId",
        "/about/",
        "/posts/"
      ]
    },
    "/": {
      "filePath": "route.tsx"
    },
    "/_app": {
      "filePath": "_app.tsx"
    },
    "/auth": {
      "filePath": "auth.tsx",
      "children": [
        "/auth/sign-in"
      ]
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/posts/$postId": {
      "filePath": "posts/$postId/route.tsx"
    },
    "/auth/sign-in": {
      "filePath": "auth/sign-in.tsx",
      "parent": "/auth"
    },
    "/about/": {
      "filePath": "about/index.tsx"
    },
    "/posts/": {
      "filePath": "posts/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
